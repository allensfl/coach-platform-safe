import { Link, useLocation } from 'react-router-dom'
import { 
  LayoutDashboard, 
  Users, 
  Calendar, 
  Video, 
  Folder, 
  BarChart3, 
  CreditCard, 
  GraduationCap, 
  ShieldCheck,
  Settings,
  HelpCircle,
  BrainCircuit,
  Rocket,
  ExternalLink
} from 'lucide-react'
import { clsx } from 'clsx'

const navigation = [
  { name: 'Dashboard', href: '/', icon: LayoutDashboard },
  { name: 'Klienten', href: '/clients', icon: Users, badge: '12' },
  { name: 'Kalender', href: '/calendar', icon: Calendar },
  { name: 'Sessions', href: '/sessions', icon: Video, hasNotification: true },
  { name: 'Dokumente', href: '/documents', icon: Folder },
  { name: 'Analytics', href: '/analytics', icon: BarChart3 },
  { name: 'ðŸš€ KI-Coaching', href: 'javascript:void(0)', icon: Rocket, special: true },
]

const businessNav = [
  { name: 'Business', href: '/business', icon: CreditCard },
  { name: 'Entwicklung', href: '/development', icon: GraduationCap },
  { name: 'QualitÃ¤t', href: '/quality', icon: ShieldCheck },
]

const bottomNav = [
  { name: 'Einstellungen', href: '/settings', icon: Settings },
  { name: 'Hilfe', href: '/help', icon: HelpCircle },
]

export default function Sidebar() {
  const location = useLocation()

  const handleMissionControlClick = () => {
    window.open('http://localhost:5173', '_blank', 'noopener,noreferrer')
  }

  return (
    <div className="w-64 bg-white shadow-lg flex flex-col">
      {/* Logo/Brand */}
      <div className="p-6 border-b border-gray-200">
        <div className="flex items-center space-x-3">
          <div className="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
            <BrainCircuit className="w-6 h-6 text-white" />
          </div>
          <div>
            <h1 className="text-lg font-bold text-gray-900">Coach MCS</h1>
            <p className="text-xs text-gray-500">Mission Control</p>
          </div>
        </div>
      </div>

      {/* Navigation */}
      <nav className="flex-1 p-4 space-y-2">
        {navigation.map((item) => {
          const isActive = location.pathname === item.href
          
          // Special handling for KI-Coaching button
          if (item.special) {
            return (
              <div key={item.name} className="relative">
                <button
                  onClick={handleMissionControlClick}
                  className="w-full flex items-center justify-between p-3 rounded-lg transition-all duration-200 bg-gradient-to-r from-purple-50 to-blue-50 text-purple-700 hover:from-purple-100 hover:to-blue-100 border border-purple-200 hover:border-purple-300 hover:shadow-md"
                >
                  <div className="flex items-center space-x-3">
                    <item.icon className="w-5 h-5" />
                    <div className="text-left">
                      <span className="font-semibold">KI-Coaching</span>
                      <div className="text-xs text-purple-600">Mission Control</div>
                    </div>
                  </div>
                  <div className="flex items-center space-x-1">
                    <ExternalLink className="w-4 h-4" />
                    <span className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></span>
                  </div>
                </button>
                
                <span className="absolute -top-2 -right-2 bg-gradient-to-r from-pink-500 to-purple-600 text-white text-xs px-2 py-1 rounded-full font-bold animate-pulse">
                  NEU
                </span>
              </div>
            )
          }
          
          // Regular navigation items
          return (
            <Link
              key={item.name}
              to={item.href}
              className={clsx(
                'flex items-center justify-between p-3 rounded-lg transition-all duration-200',
                isActive
                  ? 'bg-blue-50 text-blue-600 border-l-4 border-blue-600'
                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
              )}
            >
              <div className="flex items-center space-x-3">
                <item.icon className="w-5 h-5" />
                <span className="font-medium">{item.name}</span>
              </div>
              {item.badge && (
                <span className="bg-blue-100 text-blue-600 text-xs px-2 py-1 rounded-full">
                  {item.badge}
                </span>
              )}
              {item.hasNotification && (
                <span className="w-2 h-2 bg-green-500 rounded-full"></span>
              )}
            </Link>
          )
        })}

        {/* Divider */}
        <hr className="border-gray-200 my-4" />

        {businessNav.map((item) => {
          const isActive = location.pathname === item.href
          return (
            <Link
              key={item.name}
              to={item.href}
              className={clsx(
                'flex items-center space-x-3 p-3 rounded-lg transition-all duration-200',
                isActive
                  ? 'bg-blue-50 text-blue-600 border-l-4 border-blue-600'
                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
              )}
            >
              <item.icon className="w-5 h-5" />
              <span className="font-medium">{item.name}</span>
            </Link>
          )
        })}
      </nav>

      {/* Bottom Actions */}
      <div className="p-4 border-t border-gray-200 space-y-2">
        {bottomNav.map((item) => {
          const isActive = location.pathname === item.href
          return (
            <Link
              key={item.name}
              to={item.href}
              className={clsx(
                'flex items-center space-x-3 p-3 rounded-lg transition-all duration-200',
                isActive
                  ? 'bg-blue-50 text-blue-600'
                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
              )}
            >
              <item.icon className="w-5 h-5" />
              <span className="font-medium">{item.name}</span>
            </Link>
          )
        })}
      </div>
    </div>
  )
}